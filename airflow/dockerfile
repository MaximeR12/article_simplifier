# Use the official Apache Airflow image with a specific version to ensure compatibility
FROM apache/airflow:2.3.3-python3.8

# Set the AIRFLOW_HOME environment variable
ENV AIRFLOW_HOME=/opt/airflow

# Use the root user to perform operations requiring higher privileges
USER root

# Create the AIRFLOW_HOME directory and set the correct permissions
RUN mkdir -p $AIRFLOW_HOME && chown -R airflow: $AIRFLOW_HOME

# Copy the requirements.txt file into the container
COPY requirements.txt /tmp/requirements.txt


# Copy the entrypoint script into the container and make it executable
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Copy your DAGs and other necessary folders into the image
COPY --chown=airflow:airflow /dags /opt/airflow/dags
COPY --chown=airflow:airflow article_scrapper/ /opt/airflow/article_scrapper
COPY --chown=airflow:airflow mediastack_api_call/ /opt/airflow/mediastack_api_call

# Switch back to the default airflow user for safety
USER airflow

# Install the Python dependencies from requirements.txt
RUN pip install -r /tmp/requirements.txt

# Initialize the database. Airflow 2.x uses this command instead of 'airflow initdb'
RUN airflow db init

# Create a default admin user (you can change the username and password as needed)
RUN airflow users create \
    --username admin \
    --password admin \
    --firstname Admin \
    --lastname User \
    --role Admin \
    --email admin@example.com

# Expose port 8080 for the Airflow web server
EXPOSE 8080

# Use the Airflow webserver command to start it. The default port is 8080.
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
